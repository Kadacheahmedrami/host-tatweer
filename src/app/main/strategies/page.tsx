"use client";

import { useEffect, useState } from "react";
import { BsLightningCharge } from "react-icons/bs";
import { BiTargetLock } from "react-icons/bi";
import { HiOutlineCurrencyDollar } from "react-icons/hi";
import StrategyCard from "./componenets/strategy-card";

const strategies = [
  {
    title: "Operation Strategie",
    date: "28 January 2021",
    description:
      "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc vulputate libero et velit interdum, ac aliquet odio mattis.",
    icon: BsLightningCharge,
    iconColor: "#FFB800",
    backgroundColor: "#FFFBF2",
  },
  {
    title: "Marketing Strategie",
    date: "25 January 2021",
    description:
      "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc vulputate libero et velit interdum, ac aliquet odio mattis.",
    icon: BiTargetLock,
    iconColor: "#7B61FF",
    backgroundColor: "#F5F3FF",
  },
  {
    title: "Financial Strategie",
    date: "21 January 2021",
    description:
      "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc vulputate libero et velit interdum, ac aliquet odio mattis.",
    icon: HiOutlineCurrencyDollar,
    iconColor: "#00B2FF",
    backgroundColor: "#F0FAFF",
  },
];

export default function StrategiesPage() {
  const [department, setDepartment] = useState<any[]>([]);
  const [linked, setLinked] = useState(false);

  useEffect(() => {
    const fetchDepartment = async () => {
      try {
        const response = await fetch("http://localhost:3000/api/main/departments");
        if (!response.ok) {
          throw new Error("Failed to fetch department");
        }
        const data: any[] = await response.json();
        setDepartment(data);
        setLinked(true);
      } catch (error) {
        console.error("Error fetching department:", error);
      }
    };

    fetchDepartment();
  }, []);

  return (
    <main className="">
      <div className="max-w-7xl mx-auto">
        <h1 className="text-3xl font-bold text-gray-900 mb-8">Strategie</h1>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {department.length > 0 ? (
            department.map((dept: any, index: number) => (
              <StrategyCard
                key={index}
                title={dept.title}
                date={dept.date || "N/A"} // date of the last strategie generated by a mini ai 
                description={dept.description || "No strategie available"} // will get it from AI 
                icon={BsLightningCharge}
                iconColor="#FFB800"
                backgroundColor="#FFFBF2"
              />
            ))
          ) : (
            <StrategyCard
              key={0}
              title={"You have no departments"}
              date={""} // date of the last strategie generated by a mini ai 
              description={"No strategie available"} // will get it from AI 
              icon={BsLightningCharge}
              iconColor="#FFB800"
              backgroundColor="#FFFBF2"
            />
          )}
        </div>
      </div>
    </main>
  );
}
